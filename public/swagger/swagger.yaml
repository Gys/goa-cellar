consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  Account:
    description: A tenant account
    example:
      created_at: 2008-01-22T00:07:16-08:00
      created_by: Vero est mollitia eos voluptas.
      href: Enim suscipit est explicabo eveniet dolore.
      id: 7.9748073e+18
      name: Saepe eum cumque sint veniam.
    properties:
      created_at:
        description: Date of creation
        example: 2015-09-23T11:51:57-07:00
        format: date-time
        type: string
      created_by:
        description: Email of account owner
        example: loyce.doyle@pollich.com
        format: email
        type: string
      href:
        description: API href of account
        example: Et ut omnis praesentium non.
        type: string
      id:
        description: ID of account
        example: 6.955004e+18
        format: int64
        type: integer
      name:
        description: Name of account
        example: Explicabo laboriosam consequatur.
        type: string
    required:
    - id
    - href
    - name
    - created_at
    - created_by
    title: 'Mediatype identifier: application/vnd.account+json'
    type: object
  Bottle:
    description: A bottle of wine
    example:
      account:
        created_at: 1988-08-18T23:20:28-07:00
        created_by: Iure tenetur sapiente et ut.
        href: Voluptatem voluptatem voluptas veritatis.
        id: 9.182515e+18
        name: Sunt ut accusamus soluta.
      color: Nostrum dolore et maiores quidem iusto.
      country: Qui aut quaerat id unde sed.
      created_at: 2001-07-20T06:36:36-07:00
      href: Ut nisi est.
      id: 4.0907748e+18
      name: Quis ipsa occaecati dolorum.
      rating: 4.824842e+18
      region: Rem voluptatem.
      review: Recusandae quam qui labore animi.
      sweetness: 1.03773165e+18
      updated_at: 1987-01-07T15:39:20-08:00
      varietal: Pariatur quam quo laudantium qui ducimus.
      vineyard: Eos a provident quia omnis iure atque.
      vintage: 8.3677744e+18
    properties:
      account:
        $ref: '#/definitions/Account'
      color:
        enum:
        - red
        - white
        - rose
        - yellow
        - sparkling
        example: yellow
        type: string
      country:
        example: q5
        minLength: 2
        type: string
      created_at:
        description: Date of creation
        example: 2002-01-26T17:01:26-08:00
        format: date-time
        type: string
      href:
        description: API href of bottle
        example: Magni tempora.
        type: string
      id:
        description: ID of bottle
        example: 7.5550226e+18
        format: int64
        type: integer
      name:
        example: 7hb
        minLength: 2
        type: string
      rating:
        description: Rating of bottle between 1 and 5
        example: 4
        maximum: 5
        minimum: 1
        type: integer
      region:
        example: Consequuntur recusandae.
        type: string
      review:
        example: bzvfxy6
        maxLength: 300
        minLength: 3
        type: string
      sweetness:
        example: 3
        maximum: 5
        minimum: 1
        type: integer
      updated_at:
        description: Date of last update
        example: 1994-04-05T12:08:05-07:00
        format: date-time
        type: string
      varietal:
        example: jue8
        minLength: 4
        type: string
      vineyard:
        example: rba
        minLength: 2
        type: string
      vintage:
        example: 2010
        maximum: 2020
        minimum: 1900
        type: integer
    required:
    - id
    - href
    - name
    - vineyard
    - varietal
    - vintage
    - color
    - created_at
    title: 'Mediatype identifier: application/vnd.bottle+json'
    type: object
  BottleCollection:
    example:
    - account:
        created_at: 1997-11-14T12:42:49-08:00
        created_by: Optio corporis quam delectus.
        href: Exercitationem alias est dolores.
        id: 3.3478612e+18
        name: Ducimus expedita in quam eos distinctio.
      color: Ut molestiae possimus.
      country: Aliquam itaque quam beatae veniam quaerat sint.
      created_at: 2000-07-18T03:19:44-07:00
      href: Sit qui ut delectus.
      id: 7.6403293e+18
      name: Nulla architecto magni eos tempora sapiente.
      rating: 5.4533204e+18
      region: Beatae eveniet et tempora nobis enim.
      review: Dolorum libero qui.
      sweetness: 2.5772294e+18
      updated_at: 1980-11-29T23:07:41-08:00
      varietal: Iste dolorem officiis aut magnam commodi.
      vineyard: Voluptatem deserunt cupiditate eveniet repellat qui.
      vintage: 2.0464565e+18
    items:
      $ref: '#/definitions/Bottle'
    title: 'Mediatype identifier: application/vnd.bottle+json; type=collection'
    type: array
  CreateAccountPayload:
    properties:
      name:
        description: Name of account
        type: string
    required:
    - name
    title: CreateAccountPayload
    type: object
  CreateBottlePayload:
    properties:
      color:
        enum:
        - red
        - white
        - rose
        - yellow
        - sparkling
        type: string
      country:
        minLength: 2
        type: string
      name:
        minLength: 2
        type: string
      region:
        type: string
      review:
        maxLength: 300
        minLength: 3
        type: string
      sweetness:
        maximum: 5
        minimum: 1
        type: integer
      varietal:
        minLength: 4
        type: string
      vineyard:
        minLength: 2
        type: string
      vintage:
        maximum: 2020
        minimum: 1900
        type: integer
    required:
    - name
    - vineyard
    - varietal
    - vintage
    - color
    title: CreateBottlePayload
    type: object
  Error:
    description: Error response media type
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.api.error+json'
    type: object
  RateBottlePayload:
    properties:
      rating:
        description: Rating of bottle between 1 and 5
        maximum: 5
        minimum: 1
        type: integer
    required:
    - rating
    title: RateBottlePayload
    type: object
  UpdateAccountPayload:
    properties:
      name:
        description: Name of account
        type: string
    required:
    - name
    title: UpdateAccountPayload
    type: object
  UpdateBottlePayload:
    properties:
      color:
        enum:
        - red
        - white
        - rose
        - yellow
        - sparkling
        type: string
      country:
        minLength: 2
        type: string
      name:
        minLength: 2
        type: string
      region:
        type: string
      review:
        maxLength: 300
        minLength: 3
        type: string
      sweetness:
        maximum: 5
        minimum: 1
        type: integer
      varietal:
        minLength: 4
        type: string
      vineyard:
        minLength: 2
        type: string
      vintage:
        maximum: 2020
        minimum: 1900
        type: integer
    title: UpdateBottlePayload
    type: object
externalDocs:
  description: goa guide
  url: http://goa.design/getting-started.html
host: cellar.goa.design
info:
  contact:
    email: admin@goa.design
    name: goa team
    url: http://goa.design
  description: A basic example of a CRUD API implemented with goa
  license:
    name: MIT
    url: https://github.com/goadesign/goa/blob/master/LICENSE
  title: The virtual wine cellar
  version: ""
paths:
  /cellar/accounts:
    post:
      description: Create new account
      operationId: account#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateAccountPayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /accounts/[0-9]+
              type: string
      schemes:
      - http
      summary: create
  /cellar/accounts/{accountID}:
    delete:
      operationId: account#delete
      parameters:
      - description: Account ID
        in: path
        name: accountID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
      summary: delete
    get:
      description: Retrieve account with given id. IDs 1 and 2 pre-exist in the system.
      operationId: account#show
      parameters:
      - description: Account ID
        in: path
        name: accountID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Account'
        "404":
          description: Not Found
      schemes:
      - http
      summary: show
    put:
      description: Change account name
      operationId: account#update
      parameters:
      - description: Account ID
        in: path
        name: accountID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateAccountPayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
      summary: update
  /cellar/accounts/{accountID}/bottles:
    get:
      description: List all bottles in account optionally filtering by year
      operationId: bottle#list
      parameters:
      - description: Account ID
        in: path
        name: accountID
        required: true
        type: integer
      - description: Filter by years
        in: query
        items:
          type: integer
        name: years
        required: false
        type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BottleCollection'
        "404":
          description: Not Found
      schemes:
      - http
      summary: list
    post:
      description: Record new bottle
      operationId: bottle#create
      parameters:
      - description: Account ID
        in: path
        name: accountID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateBottlePayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: ^/accounts/[0-9]+/bottles/[0-9]+$
              type: string
      schemes:
      - http
      summary: create
  /cellar/accounts/{accountID}/bottles/{bottleID}:
    delete:
      operationId: bottle#delete
      parameters:
      - description: Account ID
        in: path
        name: accountID
        required: true
        type: integer
      - in: path
        name: bottleID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
      summary: delete
    get:
      description: Retrieve bottle with given id
      operationId: bottle#show
      parameters:
      - description: Account ID
        in: path
        name: accountID
        required: true
        type: integer
      - in: path
        name: bottleID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Bottle'
        "404":
          description: Not Found
      schemes:
      - http
      summary: show
    patch:
      operationId: bottle#update
      parameters:
      - description: Account ID
        in: path
        name: accountID
        required: true
        type: integer
      - in: path
        name: bottleID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateBottlePayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
      summary: update
  /cellar/accounts/{accountID}/bottles/{bottleID}/actions/rate:
    put:
      operationId: bottle#rate
      parameters:
      - description: Account ID
        in: path
        name: accountID
        required: true
        type: integer
      - in: path
        name: bottleID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RateBottlePayload'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      schemes:
      - http
      summary: rate
  /cellar/accounts/{accountID}/bottles/{bottleID}/watch:
    get:
      description: Retrieve bottle with given id
      operationId: bottle#watch
      parameters:
      - description: Account ID
        in: path
        name: accountID
        required: true
        type: integer
      - in: path
        name: bottleID
        required: true
        type: integer
      responses:
        "101":
          description: Switching Protocols
      schemes:
      - ws
      summary: watch
  /js/{filepath}:
    get:
      operationId: public#/js/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/Error'
      schemes:
      - http
      summary: Download public/js/
  /schema.json:
    get:
      operationId: public#/schema.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download public/schema/schema.json
  /swagger.json:
    get:
      operationId: public#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download public/swagger/swagger.json
  /ui:
    get:
      operationId: public#/ui
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download public/html/index.html
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
  OK:
    description: OK
    schema:
      $ref: '#/definitions/Account'
  SwitchingProtocols:
    description: Switching Protocols
schemes:
- http
swagger: "2.0"
